# Antithesis: Getting the Antithesis golang instrumentation library
FROM docker.io/antithesishq/go-instrumentor AS instrumentor

FROM docker.io/golang:1.22-alpine3.19 AS builder
RUN apk add git gcompat bash
RUN git clone --depth=1 https://github.com/formancehq/stack.git

# Antithesis: copy the instrumentor and supporting files to their correct locations.
COPY --from=instrumentor /opt/antithesis /opt/antithesis
COPY --from=instrumentor /opt/antithesis/lib /lib

# Antithesis: Create the destination output directory for the instrumented code.
RUN mkdir -p /app_instrumented

WORKDIR /go/stack/components/ledger

# Antithesis: instrument
RUN /opt/antithesis/bin/goinstrumentor \
    -stderrthreshold=INFO \
    -antithesis /opt/antithesis/instrumentation \
    /go/stack/components/ledger \
    /app_instrumented

ARG SEGMENT_WRITE_KEY
ARG VERSION
ARG APP_SHA
RUN apk add alpine-sdk

RUN --mount=type=cache,mode=0755,target=/go/pkg/mod go mod download
RUN --mount=type=cache,id=gomod,target=/go/pkg/mod \
    --mount=type=cache,id=gobuild,target=/root/.cache/go-build \
    CGO_ENABLED=1 go build -race -o ledger \
    -ldflags="-X github.com/formancehq/ledger/cmd.Version=${VERSION} \
    -X github.com/formancehq/ledger/cmd.BuildDate=$(date +%s) \
    -X github.com/formancehq/ledger/cmd.Commit=${APP_SHA} \
    -X github.com/formancehq/ledger/cmd.DefaultSegmentWriteKey=${SEGMENT_WRITE_KEY}" ./

FROM alpine:3.16 as app
RUN apk update && apk add ca-certificates
COPY --from=builder /app_instrumented/ .
COPY --from=builder /opt/antithesis/lib/libvoidstar.so /usr/lib/libvoidstar.so
COPY --from=builder /go/stack/components/ledger/ledger /usr/local/bin/ledger
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /usr/local/bin/ledger

EXPOSE 3068
ENV OTEL_SERVICE_NAME ledger
ENTRYPOINT ["/entrypoint.sh"]
